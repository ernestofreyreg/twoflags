{
  "openapi": "3.0.0",
  "info": {
    "title": "twoflags",
    "version": "1.0",
    "description": "All things API on twoflags",
    "contact": {
      "name": "Dev Team",
      "url": "https://twoflags.io/contact",
      "email": "dev@twoflags.io"
    },
    "termsOfService": "https://twoflags.io/tos",
    "license": {
      "name": "MIT",
      "url": "https://twoflags.io/licence"
    }
  },
  "servers": [
    {
      "url": "https://api.twoflags.io",
      "description": "Production"
    }
  ],
  "paths": {
    "/flags": {
      "get": {
        "summary": "Get all User's Flags",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Array of Feature Flags",
                      "items": {
                        "$ref": "./flag.v1.json"
                      }
                    },
                    "slots": {
                      "type": "number",
                      "description": "Remaining Feature Flags slots"
                    }
                  }
                },
                "examples": {
                  "example-no-flags": {
                    "value": {
                      "data": [],
                      "slots": 100
                    }
                  },
                  "example-with-flags": {
                    "value": {
                      "data": [
                        {
                          "id": "maintenance",
                          "type": "boolean",
                          "name": "Site Maintenance",
                          "description": "Puts web site on maintenance mode"
                        },
                        {
                          "id": "intercomid",
                          "type": "APIKey",
                          "name": "Intercom ID",
                          "description": "Intercom API Key"
                        }
                      ],
                      "slots": 98
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "operationId": "get-flags",
        "description": "Get all Feature Flags",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": []
      },
      "post": {
        "summary": "Create or Update a Flag",
        "operationId": "post-flags",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Create a new Feature Flag",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./flag.v1.json"
              },
              "examples": {
                "example-1": {
                  "value": {
                    "id": "intercomid",
                    "type": "APIKey",
                    "name": "Intercom ID",
                    "active": true
                  }
                }
              }
            }
          },
          "description": "The body of the request is exactly the Flag data"
        }
      },
      "delete": {
        "summary": "Delete a Flag",
        "operationId": "delete-flags",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found if `id` doesn't exists"
          }
        },
        "description": "",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "id": "maintenance"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [],
      "patch": {
        "summary": "",
        "operationId": "patch-flags",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Update a Feature Flag. `id` and `type` properties cannot be changed.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./flag.v1.json"
              },
              "examples": {
                "example-1": {
                  "value": {
                    "id": "intercomid",
                    "type": "APIKey",
                    "name": "Intercom ID",
                    "active": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/environments": {
      "get": {
        "summary": "Gets all User's Environments",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Array of Environments",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "origins": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "slots": {
                      "type": "number",
                      "description": ""
                    }
                  }
                },
                "examples": {
                  "example-empty": {
                    "value": {
                      "data": [],
                      "slots": 10
                    }
                  },
                  "example-multi": {
                    "value": {
                      "data": [
                        {
                          "id": "development",
                          "name": "Development",
                          "origins": [
                            "localhost",
                            "master.theapp.com"
                          ]
                        }
                      ],
                      "slots": 9
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "origins": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "slots": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "data": [
                        {
                          "id": "development",
                          "name": "Development",
                          "origins": [
                            "localhost",
                            "master.theapp.com"
                          ]
                        }
                      ],
                      "slots": 9
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-env",
        "description": "Get all Environments",
        "parameters": [],
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Create an Environment",
        "operationId": "post-env",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "412": {
            "description": "Limits reached"
          }
        },
        "description": "Create a new Environment",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "origins": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "id",
                  "name",
                  "origins"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "id": "development",
                    "name": "Development",
                    "origins": [
                      "localhost",
                      "master.theapp.com"
                    ]
                  }
                }
              }
            }
          },
          "description": "Environment data"
        }
      },
      "delete": {
        "summary": "Delete an Environment",
        "operationId": "delete-env",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found if id doesn't exists"
          }
        },
        "description": "Delete an Environment",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "id": "production"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "",
        "operationId": "patch-environments",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "412": {
            "description": "Precondition Failed"
          }
        },
        "description": "Update a Environment, the id property cannot be changed.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "origins": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "id"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "id": "development",
                    "name": "Development",
                    "origins": [
                      "localhost",
                      "master.theapp.com"
                    ]
                  }
                },
                "example-2": {
                  "value": {
                    "id": "development",
                    "name": "Development"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/namespaces": {
      "get": {
        "summary": "Get all User's Namespaces",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "./namespace.v1.json"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-namespaces",
        "description": "",
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "summary": "Create or Update a Namespace",
        "operationId": "post-namespaces",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./namespace.v1.json"
              },
              "examples": {
                "example-1": {
                  "value": {
                    "id": "main-app",
                    "name": "Main App",
                    "description": "Main App Flags View"
                  }
                }
              }
            }
          },
          "description": "A full Namespace data object"
        }
      },
      "delete": {
        "summary": "Delete a Namespace",
        "operationId": "delete-namespaces",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "id": "back-app"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/segments": {
      "get": {
        "summary": "Get all User's Segments",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "./segment.v1.json"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "data": [
                        {
                          "id": "experiment002",
                          "type": "weighted_choice",
                          "params": {
                            "options": [
                              "A",
                              "B"
                            ],
                            "weights": [
                              0.2,
                              0.8
                            ]
                          },
                          "name": "Experiment 002: New Sales Page",
                          "description": "New Sales Pages converts better"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-segments",
        "description": "",
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "summary": "Create or Update a Segment",
        "operationId": "post-segments",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./segment.v1.json"
              },
              "examples": {
                "example-1": {
                  "value": {
                    "id": "experiment002",
                    "type": "weighted_choice",
                    "params": {
                      "options": [
                        "A",
                        "B"
                      ],
                      "weights": [
                        0.2,
                        0.8
                      ]
                    },
                    "name": "Experiment 002: New Sales Page",
                    "description": "New Sales Pages converts better"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a Segment",
        "operationId": "delete-segments",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/values": {
      "get": {
        "summary": "Get Flag Value",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "flag1": "Value1",
                      "flag2": null,
                      "flagN": "ValueN"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-set",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Gets all Flag values for a Environment/Namespace (Flags not present in Namespace will return null values)",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "env",
            "description": "Environment ID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "ns",
            "description": "Namespace ID"
          }
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Update Flag values",
        "operationId": "post-values",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Updates Flag values on a Environment / Namespace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "env": {
                    "type": "string"
                  },
                  "ns": {
                    "type": "string"
                  },
                  "flag": {
                    "type": "string"
                  },
                  "value": {
                    "type": [
                      "string",
                      "number",
                      "integer",
                      "boolean",
                      "null"
                    ]
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "env": "production",
                    "ns": "main-app",
                    "flag": "maintenance",
                    "value": true
                  }
                },
                "example-clear": {
                  "value": {
                    "env": "production",
                    "ns": "main-app",
                    "flag": "intercomid",
                    "value": null
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": "null value means clear Flag on that Environment / Namespace"
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/apikeys": {
      "get": {
        "summary": "Get User's API Keys",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "created_by": {
                            "type": "string",
                            "description": ""
                          },
                          "created_at": {
                            "type": "string",
                            "description": "ISO Date String"
                          },
                          "last_used": {
                            "type": "string",
                            "description": "ISO Date String"
                          }
                        }
                      }
                    },
                    "slots": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "example-empty": {
                    "value": {
                      "data": [],
                      "slots": 10
                    }
                  },
                  "example-2": {
                    "value": {
                      "data": [
                        {
                          "id": "circleci",
                          "created_by": "johndaly",
                          "created_at": "<iso date>",
                          "last_used": "<iso date>"
                        }
                      ],
                      "slots": 9
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-apikeys",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "This endpoint doesn't return the actual values of the API Keys. That value is only returned once on the Create API Key endpoint."
      },
      "post": {
        "summary": "Create API Key",
        "operationId": "post-apikeys",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "created_by": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "last_used": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "circleci",
                      "key": "<uuid4>",
                      "created_by": "johndaly",
                      "created_at": "<iso date>",
                      "last_used": null
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Limits reached"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "id": "circleci"
                  }
                }
              }
            }
          }
        },
        "description": "Creates an API Key, it returns the full API Key object including the actualy Key, this is the only time the key is shared on the API."
      },
      "delete": {
        "summary": "Delete an API Key",
        "operationId": "delete-apikeys",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found if id doesn't exists"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "id": "circleci"
                  }
                }
              }
            }
          }
        },
        "description": "Deletes an API Key"
      }
    },
    "/resolver": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "string"
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-resolver",
        "requestBody": {},
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "acc",
            "description": "Account ID",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "ns",
            "description": "Namespace"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "env",
            "description": "Environment",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "cor",
            "description": "Correlation ID"
          }
        ]
      }
    },
    "/flags/selector": {
      "post": {
        "summary": "Update flag selector",
        "operationId": "post-flags-select",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string"
                          },
                          "value": {
                            "type": [
                              "string",
                              "number",
                              "boolean"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "op": {
                    "type": "string",
                    "enum": [
                      "push",
                      "pop",
                      "shift",
                      "unshift"
                    ]
                  },
                  "label": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "op",
                  "label",
                  "value"
                ]
              }
            }
          }
        },
        "description": ""
      },
      "parameters": [],
      "get": {
        "summary": "",
        "operationId": "get-flags-selector",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data:": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "slots": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "data": [
                        {
                          "label": "Test Environment",
                          "value": "1029009093232"
                        },
                        {
                          "label": "Production Environment",
                          "value": "32789878989842"
                        }
                      ],
                      "slots": 48
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get Feature Flag Selectors. A Selector is a possible value on a string Feature Flag identified by a name.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "Feature Flag `id`"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "Bearer"
      }
    },
    "schemas": {}
  }
}